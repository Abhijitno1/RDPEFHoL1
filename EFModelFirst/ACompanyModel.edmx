<?xml version="1.0" encoding="utf-8"?>
<edmx:Edmx Version="3.0" xmlns:edmx="http://schemas.microsoft.com/ado/2009/11/edmx">
  <!-- EF Runtime content -->
  <edmx:Runtime>
    <!-- SSDL content -->
    <edmx:StorageModels>
    <Schema Namespace="ACompanyModel.Store" Provider="System.Data.SqlClient" ProviderManifestToken="2008" Alias="Self" xmlns:store="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator" xmlns:customannotation="http://schemas.microsoft.com/ado/2013/11/edm/customannotation" xmlns="http://schemas.microsoft.com/ado/2009/11/edm/ssdl">
        <EntityType Name="Authors">
          <Key>
            <PropertyRef Name="Id" />
          </Key>
          <Property Name="Id" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="AuthorName" Type="nvarchar(max)" Nullable="false" />
        </EntityType>
        <EntityType Name="BookAuthor">
          <Key>
            <PropertyRef Name="Books_Id" />
            <PropertyRef Name="Authors_Id" />
          </Key>
          <Property Name="Books_Id" Type="int" Nullable="false" />
          <Property Name="Authors_Id" Type="int" Nullable="false" />
        </EntityType>
        <EntityType Name="Books">
          <Key>
            <PropertyRef Name="Id" />
          </Key>
          <Property Name="Id" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="BookName" Type="nvarchar(max)" Nullable="false" />
          <Property Name="Publisher" Type="varchar(max)" Nullable="false" />
          <Property Name="Subject" Type="nvarchar(max)" />
        </EntityType>
        <EntityType Name="Departments">
          <Key>
            <PropertyRef Name="DepartmentId" />
          </Key>
          <Property Name="DepartmentId" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="DepartmentName" Type="nvarchar" MaxLength="50" Nullable="false" />
        </EntityType>
        <EntityType Name="Employees">
          <Key>
            <PropertyRef Name="EmployeeId" />
          </Key>
          <Property Name="EmployeeId" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="FirstName" Type="nvarchar" MaxLength="40" Nullable="false" />
          <Property Name="LastName" Type="nvarchar" MaxLength="40" Nullable="false" />
          <Property Name="Age" Type="smallint" />
          <Property Name="DepartmentId" Type="int" Nullable="false" />
        </EntityType>
        <EntityType Name="Standards">
          <Key>
            <PropertyRef Name="StandardId" />
          </Key>
          <Property Name="StandardId" Type="smallint" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="Description" Type="nvarchar(max)" Nullable="false" />
        </EntityType>
        <EntityType Name="Students">
          <Key>
            <PropertyRef Name="StudentId" />
          </Key>
          <Property Name="StudentId" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="StudentName" Type="nvarchar(max)" Nullable="false" />
          <Property Name="StandardId" Type="smallint" Nullable="false" />
        </EntityType>
        <Association Name="FK_BookAuthorJoiner_Author">
          <End Role="Authors" Type="Self.Authors" Multiplicity="1" />
          <End Role="BookAuthor" Type="Self.BookAuthor" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="Authors">
              <PropertyRef Name="Id" />
            </Principal>
            <Dependent Role="BookAuthor">
              <PropertyRef Name="Authors_Id" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="FK_BookAuthorJoiner_Book">
          <End Role="Books" Type="Self.Books" Multiplicity="1" />
          <End Role="BookAuthor" Type="Self.BookAuthor" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="Books">
              <PropertyRef Name="Id" />
            </Principal>
            <Dependent Role="BookAuthor">
              <PropertyRef Name="Books_Id" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="FK_DepartmentEmployee">
          <End Role="Departments" Type="Self.Departments" Multiplicity="1" />
          <End Role="Employees" Type="Self.Employees" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="Departments">
              <PropertyRef Name="DepartmentId" />
            </Principal>
            <Dependent Role="Employees">
              <PropertyRef Name="DepartmentId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="FK_StandardStudent">
          <End Role="Standards" Type="Self.Standards" Multiplicity="1" />
          <End Role="Students" Type="Self.Students" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="Standards">
              <PropertyRef Name="StandardId" />
            </Principal>
            <Dependent Role="Students">
              <PropertyRef Name="StandardId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Function Name="BooksWithAuthors" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="BookId" Type="int" Mode="In" />
        </Function>
        <EntityContainer Name="ACompanyModelStoreContainer">
          <EntitySet Name="Authors" EntityType="Self.Authors" Schema="dbo" store:Type="Tables" />
          <EntitySet Name="BookAuthor" EntityType="Self.BookAuthor" Schema="dbo" store:Type="Tables" />
          <EntitySet Name="Books" EntityType="Self.Books" Schema="dbo" store:Type="Tables" />
          <EntitySet Name="Departments" EntityType="Self.Departments" Schema="dbo" store:Type="Tables" />
          <EntitySet Name="Employees" EntityType="Self.Employees" Schema="dbo" store:Type="Tables" />
          <EntitySet Name="Standards" EntityType="Self.Standards" Schema="dbo" store:Type="Tables" />
          <EntitySet Name="Students" EntityType="Self.Students" Schema="dbo" store:Type="Tables" />
          <AssociationSet Name="FK_BookAuthorJoiner_Author" Association="Self.FK_BookAuthorJoiner_Author">
            <End Role="Authors" EntitySet="Authors" />
            <End Role="BookAuthor" EntitySet="BookAuthor" />
          </AssociationSet>
          <AssociationSet Name="FK_BookAuthorJoiner_Book" Association="Self.FK_BookAuthorJoiner_Book">
            <End Role="Books" EntitySet="Books" />
            <End Role="BookAuthor" EntitySet="BookAuthor" />
          </AssociationSet>
          <AssociationSet Name="FK_DepartmentEmployee" Association="Self.FK_DepartmentEmployee">
            <End Role="Departments" EntitySet="Departments" />
            <End Role="Employees" EntitySet="Employees" />
          </AssociationSet>
          <AssociationSet Name="FK_StandardStudent" Association="Self.FK_StandardStudent">
            <End Role="Standards" EntitySet="Standards" />
            <End Role="Students" EntitySet="Students" />
          </AssociationSet>
        </EntityContainer>
      </Schema></edmx:StorageModels>
    <!-- CSDL content -->
    <edmx:ConceptualModels>
      <Schema xmlns="http://schemas.microsoft.com/ado/2009/11/edm" xmlns:cg="http://schemas.microsoft.com/ado/2006/04/codegeneration" xmlns:store="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator" Namespace="ACompanyModel" Alias="Self" xmlns:annotation="http://schemas.microsoft.com/ado/2009/02/edm/annotation" annotation:UseStrongSpatialTypes="false">
        <EntityContainer Name="ACompanyModelContainer" annotation:LazyLoadingEnabled="true">
          <EntitySet Name="Employees" EntityType="ACompanyModel.Employee" />
          <EntitySet Name="Departments" EntityType="ACompanyModel.Department" />
          <AssociationSet Name="DepartmentEmployee" Association="ACompanyModel.DepartmentEmployee">
            <End Role="Department" EntitySet="Departments" />
            <End Role="Employee" EntitySet="Employees" />
          </AssociationSet>
          <EntitySet Name="Students" EntityType="ACompanyModel.Student" />
          <EntitySet Name="Standards" EntityType="ACompanyModel.Standard" />
          <AssociationSet Name="StandardStudent" Association="ACompanyModel.StandardStudent">
            <End Role="Standard" EntitySet="Standards" />
            <End Role="Student" EntitySet="Students" />
          </AssociationSet>
          <EntitySet Name="Books" EntityType="ACompanyModel.Book" />
          <EntitySet Name="Authors" EntityType="ACompanyModel.Author" />
          <AssociationSet Name="BookAuthor" Association="ACompanyModel.BookAuthorJoiner">
            <End Role="Book" EntitySet="Books" />
            <End Role="Author" EntitySet="Authors" />
          </AssociationSet>
          <FunctionImport Name="BooksWithAuthors" ReturnType="Collection(ACompanyModel.BooksWithAuthors_Result)">
            <Parameter Name="BookId" Mode="In" Type="Int32" />
          </FunctionImport>
        </EntityContainer>
        <EntityType Name="Employee">
          <Key>
            <PropertyRef Name="EmployeeId" />
          </Key>
          <Property Name="EmployeeId" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="FirstName" Type="String" Nullable="false" MaxLength="40" Unicode="true" FixedLength="false" />
          <Property Name="LastName" Type="String" Nullable="false" MaxLength="40" Unicode="true" FixedLength="false" />
          <Property Name="Age" Type="Int16" Nullable="true" />
          <Property Name="DepartmentId" Type="Int32" Nullable="false" />
          <NavigationProperty Name="Department" Relationship="ACompanyModel.DepartmentEmployee" FromRole="Employee" ToRole="Department" />
        </EntityType>
        <EntityType Name="Department">
          <Key>
            <PropertyRef Name="DepartmentId" />
          </Key>
          <Property Name="DepartmentId" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="DepartmentName" Type="String" Nullable="false" MaxLength="50" Unicode="true" FixedLength="false" />
          <NavigationProperty Name="Employees" Relationship="ACompanyModel.DepartmentEmployee" FromRole="Department" ToRole="Employee" />
        </EntityType>
        <Association Name="DepartmentEmployee">
          <End Type="ACompanyModel.Department" Role="Department" Multiplicity="1" />
          <End Type="ACompanyModel.Employee" Role="Employee" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="Department">
              <PropertyRef Name="DepartmentId" />
            </Principal>
            <Dependent Role="Employee">
              <PropertyRef Name="DepartmentId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <EntityType Name="Student">
          <Key>
            <PropertyRef Name="StudentId" />
          </Key>
          <Property Name="StudentId" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="StudentName" Type="String" Nullable="false" MaxLength="Max" Unicode="true" FixedLength="false" />
          <Property Name="StandardId" Type="Int16" Nullable="false" />
          <NavigationProperty Name="Standard" Relationship="ACompanyModel.StandardStudent" FromRole="Student" ToRole="Standard" />
        </EntityType>
        <EntityType Name="Standard">
          <Key>
            <PropertyRef Name="StandardId" />
          </Key>
          <Property Name="StandardId" Type="Int16" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <NavigationProperty Name="Students" Relationship="ACompanyModel.StandardStudent" FromRole="Standard" ToRole="Student" />
          <Property Name="Description" Type="String" Nullable="false" MaxLength="Max" Unicode="true" FixedLength="false" />
        </EntityType>
        <Association Name="StandardStudent">
          <End Type="ACompanyModel.Standard" Role="Standard" Multiplicity="1" />
          <End Type="ACompanyModel.Student" Role="Student" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="Standard">
              <PropertyRef Name="StandardId" />
            </Principal>
            <Dependent Role="Student">
              <PropertyRef Name="StandardId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <EntityType Name="Book">
          <Key>
            <PropertyRef Name="Id" />
          </Key>
          <Property Name="Id" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="BookName" Type="String" Nullable="false" MaxLength="Max" Unicode="true" FixedLength="false" />
          <Property Name="Publisher" Type="String" Nullable="false" Unicode="false" MaxLength="Max" FixedLength="false" />
          <Property Name="Subject" Type="String" Nullable="true" MaxLength="Max" Unicode="true" FixedLength="false" />
          <NavigationProperty Name="Authors" Relationship="ACompanyModel.BookAuthorJoiner" FromRole="Book" ToRole="Author" />
        </EntityType>
        <EntityType Name="Author">
          <Key>
            <PropertyRef Name="Id" />
          </Key>
          <Property Name="Id" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <NavigationProperty Name="Books" Relationship="ACompanyModel.BookAuthorJoiner" FromRole="Author" ToRole="Book" />
          <Property Name="AuthorName" Type="String" Nullable="false" MaxLength="Max" Unicode="true" FixedLength="false" />
        </EntityType>
        <Association Name="BookAuthorJoiner">
          <End Type="ACompanyModel.Book" Role="Book" Multiplicity="*" />
          <End Type="ACompanyModel.Author" Role="Author" Multiplicity="*" />
        </Association>
        <ComplexType Name="BooksWithAuthors_Result">
          <Property Type="String" Name="BookName" Nullable="false" />
          <Property Type="String" Name="Publisher" Nullable="false" />
          <Property Type="String" Name="Subject" Nullable="true" />
          <Property Type="String" Name="AuthorName" Nullable="false" />
        </ComplexType>
      </Schema>
    </edmx:ConceptualModels>
    <!-- C-S mapping content -->
    <edmx:Mappings>
    <Mapping Space="C-S" xmlns="http://schemas.microsoft.com/ado/2009/11/mapping/cs">
  <EntityContainerMapping StorageEntityContainer="ACompanyModelStoreContainer" CdmEntityContainer="ACompanyModelContainer">
    <EntitySetMapping Name="Employees">
      <EntityTypeMapping TypeName="IsTypeOf(ACompanyModel.Employee)">
        <MappingFragment StoreEntitySet="Employees">
          <ScalarProperty Name="EmployeeId" ColumnName="EmployeeId" />
          <ScalarProperty Name="FirstName" ColumnName="FirstName" />
          <ScalarProperty Name="LastName" ColumnName="LastName" />
          <ScalarProperty Name="Age" ColumnName="Age" />
          <ScalarProperty Name="DepartmentId" ColumnName="DepartmentId" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Departments">
      <EntityTypeMapping TypeName="IsTypeOf(ACompanyModel.Department)">
        <MappingFragment StoreEntitySet="Departments">
          <ScalarProperty Name="DepartmentId" ColumnName="DepartmentId" />
          <ScalarProperty Name="DepartmentName" ColumnName="DepartmentName" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Students">
      <EntityTypeMapping TypeName="IsTypeOf(ACompanyModel.Student)">
        <MappingFragment StoreEntitySet="Students">
          <ScalarProperty Name="StudentId" ColumnName="StudentId" />
          <ScalarProperty Name="StudentName" ColumnName="StudentName" />
          <ScalarProperty Name="StandardId" ColumnName="StandardId" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Standards">
      <EntityTypeMapping TypeName="IsTypeOf(ACompanyModel.Standard)">
        <MappingFragment StoreEntitySet="Standards">
          <ScalarProperty Name="StandardId" ColumnName="StandardId" />
          <ScalarProperty Name="Description" ColumnName="Description" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Books">
      <EntityTypeMapping TypeName="IsTypeOf(ACompanyModel.Book)">
        <MappingFragment StoreEntitySet="Books">
          <ScalarProperty Name="Id" ColumnName="Id" />
          <ScalarProperty Name="BookName" ColumnName="BookName" />
          <ScalarProperty Name="Publisher" ColumnName="Publisher" />
          <ScalarProperty Name="Subject" ColumnName="Subject" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Authors">
      <EntityTypeMapping TypeName="IsTypeOf(ACompanyModel.Author)">
        <MappingFragment StoreEntitySet="Authors">
          <ScalarProperty Name="Id" ColumnName="Id" />
          <ScalarProperty Name="AuthorName" ColumnName="AuthorName" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <AssociationSetMapping Name="BookAuthor" TypeName="ACompanyModel.BookAuthorJoiner" StoreEntitySet="BookAuthor">
      <EndProperty Name="Book">
        <ScalarProperty Name="Id" ColumnName="Books_Id" />
      </EndProperty>
      <EndProperty Name="Author">
        <ScalarProperty Name="Id" ColumnName="Authors_Id" />
      </EndProperty>
    </AssociationSetMapping>
          <FunctionImportMapping FunctionImportName="BooksWithAuthors" FunctionName="ACompanyModel.Store.BooksWithAuthors">
            <ResultMapping>
              <ComplexTypeMapping TypeName="ACompanyModel.BooksWithAuthors_Result">
                <ScalarProperty Name="BookName" ColumnName="BookName" />
                <ScalarProperty Name="Publisher" ColumnName="Publisher" />
                <ScalarProperty Name="Subject" ColumnName="Subject" />
                <ScalarProperty Name="AuthorName" ColumnName="AuthorName" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
  </EntityContainerMapping>
</Mapping></edmx:Mappings>
  </edmx:Runtime>
  <!-- EF Designer content (DO NOT EDIT MANUALLY BELOW HERE) -->
  <edmx:Designer xmlns="http://schemas.microsoft.com/ado/2009/11/edmx">
    <edmx:Connection>
      <DesignerInfoPropertySet>
        <DesignerProperty Name="MetadataArtifactProcessing" Value="EmbedInOutputAssembly" />
      </DesignerInfoPropertySet>
    </edmx:Connection>
    <edmx:Options>
      <DesignerInfoPropertySet>
        <DesignerProperty Name="ValidateOnBuild" Value="true" />
        <DesignerProperty Name="EnablePluralization" Value="True" />
        <DesignerProperty Name="CodeGenerationStrategy" Value="None" />
        <DesignerProperty Name="UseLegacyProvider" Value="True" />
        <DesignerProperty Name="IncludeForeignKeysInModel" Value="True" />
      </DesignerInfoPropertySet>
    </edmx:Options>
    <!-- Diagram content (shape and connector positions) -->
    <edmx:Diagrams>
    </edmx:Diagrams>
  </edmx:Designer>
</edmx:Edmx>
